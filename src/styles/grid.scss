@import 'vars';

@mixin generate-grid-columns($cols, $gap) {
  display: flex;
  flex-wrap: wrap;

  > .grid-item {
    width: calc((100% - #{$cols * $gap}) / #{$cols});
    margin: $gap / 2 $gap / 2;
  }

  @supports (grid-template-rows: 1px) {
    display: grid;
    grid-template-columns: repeat($cols, calc((100% - #{($cols - 1) * $gap}) / #{$cols}));
    grid-gap: $gap;

    > .grid-item {
      width: 100%;
      margin: 0;
    }
  }
}

.grid {
  @include generate-grid-columns(4, 1vw);

  @supports (grid-template-rows: 1px) {
    grid-template-rows: [line1] $grid-item-size [line2] $grid-item-size [other-lines];
    grid-auto-rows: $grid-item-size;
  }

  @media (min-width: $breakpoint-2-col) and (max-width: $breakpoint-3-col) {
    @include generate-grid-columns(2, 1em);
  }

  @media (min-width: $breakpoint-3-col) and (max-width: $breakpoint-4-col) {
    @include generate-grid-columns(3, 1vw);
  }

  @media (max-width: $breakpoint-2-col) {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;

    .grid-item {
      margin: $grid-item-margin 0;
      width: $grid-item-max-size;
      box-sizing: border-box;
    }
  }

  .grid-item {
    &.grid-item--large {
      grid-column: 1 / 3;
      grid-row: 1 / 3;
    }
  }
}
